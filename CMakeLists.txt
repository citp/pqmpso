cmake_minimum_required(VERSION 3.16)

project(pqmpso)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/target)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_BUILD_TYPE Debug)
set(CMAKE_CXX_FLAGS "-O3 -Wall -Werror -fpermissive")
# set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -pg")
# set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -pg")
# set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -pg")

# option( BUILD_STATIC "Set to ON to include static versions of the library" OFF)

find_package(OpenFHE)

set( CMAKE_CXX_FLAGS ${OpenFHE_CXX_FLAGS} )

include_directories( ${OPENMP_INCLUDES} )
include_directories( ${OpenFHE_INCLUDE} )
include_directories( ${OpenFHE_INCLUDE}/core )
include_directories( ${OpenFHE_INCLUDE}/pke )

link_directories( ${OpenFHE_LIBDIR} )
link_directories( ${OPENMP_LIBRARIES} )
# if(BUILD_STATIC)
#     set( CMAKE_EXE_LINKER_FLAGS "${OpenFHE_EXE_LINKER_FLAGS} -static -pg")
#     link_libraries( ${OpenFHE_STATIC_LIBRARIES} )
# else()
set( CMAKE_EXE_LINKER_FLAGS "${OpenFHE_EXE_LINKER_FLAGS}" )
link_libraries( ${OpenFHE_SHARED_LIBRARIES} )
# endif()

add_executable(pqmpso main.cpp)
target_include_directories(pqmpso PRIVATE ${CMAKE_BINARY_DIR}/include)
target_include_directories(pqmpso PUBLIC /usr/local/include/openfhe/core)
target_include_directories(pqmpso PUBLIC /usr/local/include/openfhe/pke)
target_include_directories(pqmpso PUBLIC /usr/local/include/openfhe)
target_link_libraries(pqmpso PUBLIC pthread ssl crypto)

add_executable(pqmpso_test tests.cpp)
target_include_directories(pqmpso_test PRIVATE ${CMAKE_BINARY_DIR}/include)
target_include_directories(pqmpso_test PUBLIC /usr/local/include/openfhe/core)
target_include_directories(pqmpso_test PUBLIC /usr/local/include/openfhe/pke)
target_include_directories(pqmpso_test PUBLIC /usr/local/include/openfhe)
target_link_libraries(pqmpso_test PUBLIC pthread ssl crypto)
